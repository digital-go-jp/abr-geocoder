name: NPM latest publish

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - develop

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: actions/cache@v3
        name: Setup npm cache
        id: node_modules
        with:
          path: node_modules/
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}

      - name: Install dependencies
        if: steps.node_modules.outputs.cache-hit != 'true'
        run: |
          npm install --global yarn
          yarn install

      - name: Build
        run: npm run build

      - name: test
        run: |
          npm run test
          npm run test:system
          
      - name: git setup
        run: |
          git config --global user.email "no-reply@digital.go.jp"
          git config --global user.name "github actions"
          
      - name: bump up (on main)
        if: github.ref == 'refs/heads/main'
        run: |
          npm version minor
        env:
          GITHUB_TOKEN: ${{ secrets.G_ACTIONS_TOKEN_FOR_PR }}

      - name: bump up (on develop)
        if: github.ref == 'refs/heads/develop'
        run: |
          npm version prepatch
        env:
          GITHUB_TOKEN: ${{ secrets.G_ACTIONS_TOKEN_FOR_PR }}

      - name: create changelog.md
        id: prepare
        run: |
          bash ./.github/workflows/generate_changelog.sh
          git add .
          git commit -m "create changelog.md"
          version=$(cat package.json | jq -r '.version')
          echo "version=$version" >> $GITHUB_OUTPUT
          tgz=$(npm pack | tail -n1 | tr -d '\n')
          echo "tgz=$tgz" >> $GITHUB_OUTPUT

        env:
          GITHUB_TOKEN: ${{ secrets.G_ACTIONS_TOKEN_FOR_PR }}
      
      - name: github & npm release (on main)
        if: github.ref == 'refs/heads/main'
        run: |
          git push
          gh release create ${{ steps.prepare.outputs.version }} ${{ steps.prepare.outputs.tgz }} --notes-file change_notes/${{ steps.prepare.outputs.version }}.md
          npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.G_ACTIONS_TOKEN_FOR_PR }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
    
      - name: github & npm release (on develop)
        if: github.ref == 'refs/heads/develop'
        run: |
          gh release create ${{ steps.prepare.outputs.version }} ${{ steps.prepare.outputs.tgz }} --notes-file change_notes/${{ steps.prepare.outputs.version }}.md
          npm publish --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.G_ACTIONS_TOKEN_FOR_PR }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
